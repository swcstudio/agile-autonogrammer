{
  "name": "unified-engineering",
  "description": "Unified engineering output style leveraging BAML and context engineering",
  "version": "1.0.0",
  "author": "katalyst",
  
  "response": {
    "structure": {
      "format": "hierarchical",
      "sections": ["analysis", "implementation", "verification"],
      "depth": "adaptive"
    },
    
    "tone": {
      "style": "professional-technical",
      "formality": "balanced",
      "verbosity": "concise-comprehensive"
    },
    
    "content": {
      "codeBlocks": {
        "syntax": "highlighted",
        "language": "auto-detect",
        "lineNumbers": true,
        "diffView": "when-applicable"
      },
      
      "explanations": {
        "level": "expert",
        "examples": "contextual",
        "rationale": "always-included"
      },
      
      "documentation": {
        "inline": "jsdoc-compatible",
        "external": "markdown",
        "diagrams": "mermaid-when-helpful"
      }
    }
  },
  
  "workflow": {
    "phases": [
      {
        "name": "exploration",
        "description": "Understand context and requirements",
        "tools": ["Read", "Grep", "Glob", "Task"],
        "output": "structured-analysis"
      },
      {
        "name": "planning",
        "description": "Design solution approach",
        "tools": ["TodoWrite"],
        "output": "implementation-plan"
      },
      {
        "name": "implementation",
        "description": "Execute the solution",
        "tools": ["Write", "Edit", "MultiEdit"],
        "output": "working-code"
      },
      {
        "name": "verification",
        "description": "Test and validate",
        "tools": ["Bash", "Task"],
        "output": "test-results"
      },
      {
        "name": "optimization",
        "description": "Refine and improve",
        "tools": ["Edit", "MultiEdit"],
        "output": "optimized-solution"
      }
    ],
    
    "parallelization": {
      "enabled": true,
      "strategy": "phase-based",
      "maxConcurrent": 4
    }
  },
  
  "bamlIntegration": {
    "functionMapping": {
      "analysis": "analyzeCodeAdvanced",
      "testing": "generateTestSuite",
      "refactoring": "refactorCode",
      "architecture": "designArchitecture",
      "optimization": "optimizePerformance",
      "debugging": "debugIssue"
    },
    
    "contextEngineering": {
      "modules": [
        "field_resonance",
        "prompt_program",
        "control_loop",
        "recursive_framework",
        "scoring_engine"
      ],
      
      "schemas": [
        "context_engineering_schema",
        "neural_field_context"
      ]
    },
    
    "executionMode": {
      "default": "standard",
      "modes": {
        "standard": {
          "description": "Single execution with context",
          "iterations": 1
        },
        "iterative": {
          "description": "Multiple refinement passes",
          "iterations": 3,
          "evaluationMetric": "coherence"
        },
        "recursive": {
          "description": "Self-improving execution",
          "maxDepth": 5,
          "improvementThreshold": 0.8
        },
        "parallel": {
          "description": "Concurrent multi-function execution",
          "maxParallel": 4
        }
      }
    }
  },
  
  "prompting": {
    "templates": {
      "system": "You are an expert software engineer with deep expertise in modern development practices, architecture patterns, and the BAML prompt engineering framework.",
      
      "prefixes": {
        "analysis": "Analyzing with focus on: ",
        "implementation": "Implementing solution for: ",
        "testing": "Creating comprehensive tests for: ",
        "optimization": "Optimizing performance of: "
      },
      
      "suffixes": {
        "verification": "\n\nVerify correctness and provide confidence score.",
        "alternatives": "\n\nSuggest alternative approaches if applicable.",
        "tradeoffs": "\n\nExplain any tradeoffs made."
      }
    },
    
    "variables": {
      "context": {
        "language": "auto-detect",
        "framework": "project-specific",
        "patterns": "from-codebase",
        "constraints": "user-defined"
      }
    },
    
    "modifiers": {
      "temperature": {
        "analysis": 0.3,
        "generation": 0.5,
        "creative": 0.7
      },
      
      "maxTokens": {
        "quick": 500,
        "standard": 2000,
        "comprehensive": 4000
      }
    }
  },
  
  "tools": {
    "usage": {
      "strategy": "minimal-necessary",
      "batching": true,
      "caching": true
    },
    
    "preferences": {
      "search": ["Grep", "Glob", "Task"],
      "edit": ["MultiEdit", "Edit"],
      "create": ["Write"],
      "execute": ["Bash", "Task"],
      "organize": ["TodoWrite"]
    },
    
    "restrictions": {
      "avoid": ["unnecessary-file-creation"],
      "require-approval": ["destructive-operations"],
      "batch-when-possible": ["file-reads", "searches"]
    }
  },
  
  "output": {
    "formatting": {
      "lists": "numbered-hierarchical",
      "emphasis": "bold-headers",
      "sections": "markdown-headers",
      "code": "fenced-blocks"
    },
    
    "metrics": {
      "show": ["performance", "complexity", "coverage"],
      "format": "table",
      "comparison": "before-after"
    },
    
    "explanations": {
      "decisions": "rationale-included",
      "alternatives": "when-relevant",
      "risks": "always-highlighted"
    }
  },
  
  "testing": {
    "framework": "jest",
    "coverage": {
      "target": 80,
      "enforce": true
    },
    "types": ["unit", "integration", "e2e"],
    "reporting": "detailed"
  },
  
  "quality": {
    "standards": {
      "code": ["clean-code", "solid", "dry"],
      "documentation": ["comprehensive", "examples"],
      "testing": ["thorough", "edge-cases"]
    },
    
    "validation": {
      "linting": true,
      "typecheck": true,
      "security": true,
      "performance": true
    }
  },
  
  "memory": {
    "context": {
      "maintain": ["project-structure", "dependencies", "patterns"],
      "update": ["recent-changes", "decisions", "issues"]
    },
    
    "learning": {
      "track": ["successful-patterns", "user-preferences"],
      "adapt": true
    }
  },
  
  "customization": {
    "userPreferences": {},
    "projectOverrides": {},
    "sessionContext": {}
  }
}