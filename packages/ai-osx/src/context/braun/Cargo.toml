[package]
name = "ai_osx_braun"
version = "0.1.0"
edition = "2021"
authors = ["AI-OSX Team <ai-osx@example.com>"]
description = "High-performance computational engine (Braun) for AI-OSX Brain-Braun-Beyond architecture"
license = "MIT"

[lib]
name = "ai_osx_braun"
crate-type = ["cdylib"]

[dependencies]
# Elixir NIF support
rustler = "0.30"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Concurrency and parallelism
rayon = "1.8"
tokio = { version = "1.0", features = ["full"] }
parking_lot = "0.12"

# Mathematical computing
ndarray = { version = "0.15", features = ["rayon", "serde"] }
nalgebra = { version = "0.32", features = ["serde-serialize"] }
nalgebra-sparse = "0.9"

# Linear algebra and scientific computing
blas-src = { version = "0.8", features = ["openblas"] }
lapack-src = { version = "0.8", features = ["openblas"] }

# Statistical and machine learning
smartcore = { version = "0.3", features = ["ndarray-bindings"] }
linfa = "0.7"
linfa-clustering = "0.7"
linfa-nn = "0.7"

# Optimization algorithms
argmin = "0.8"
argmin-math = "0.3"

# Random number generation
rand = "0.8"
rand_distr = "0.4"

# Numerical integration and ODEs
ode_solvers = "0.4"

# Signal processing and FFT
rustfft = "6.1"
spectrum-analyzer = "1.5"

# Cryptography and security
ring = "0.17"
chacha20poly1305 = "0.10"
x25519-dalek = "2.0"

# Networking and async I/O
reqwest = { version = "0.11", features = ["json"] }
hyper = { version = "0.14", features = ["full"] }

# Memory management and profiling
jemalloc-sys = "0.5"
mimalloc = "0.1"

# Utilities
uuid = { version = "1.6", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
lazy_static = "1.4"
once_cell = "1.19"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Feature flags for optional dependencies
[features]
default = ["quantum", "gpu-acceleration", "distributed"]

# Quantum computing simulation support
quantum = ["qiskit-terra"]

# GPU acceleration support (placeholder - would need actual CUDA/OpenCL crates)
gpu-acceleration = []

# Distributed computing support
distributed = ["rdkafka", "consul"]

# Development dependencies
[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.4"
approx = "0.5"

# Optional quantum computing dependencies
[dependencies.qiskit-terra]
version = "0.1"
optional = true

# Optional distributed computing dependencies
[dependencies.rdkafka]
version = "0.36"
optional = true

[dependencies.consul]
version = "0.4"
optional = true

# Performance optimization settings
[profile.release]
opt-level = 3
lto = "fat"
codegen-units = 1
panic = "abort"
overflow-checks = false

[profile.dev]
opt-level = 1

# Benchmark profile for performance testing
[profile.bench]
opt-level = 3
debug = true
lto = "thin"

[[bench]]
name = "matrix_operations"
harness = false

[[bench]]
name = "quantum_algorithms"
harness = false

[[bench]]
name = "field_dynamics"
harness = false

[workspace]
members = [
  "crates/quantum-sim",
  "crates/gpu-accel",
  "crates/distributed-compute"
]

# Metadata for documentation
[package.metadata.docs.rs]
features = ["quantum", "gpu-acceleration", "distributed"]
rustdoc-args = ["--cfg", "docsrs"]