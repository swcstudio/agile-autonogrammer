[package]
name = "ai-osx-desktop"
version = "1.0.0"
description = "AI-OSX Desktop Application - Brain-Braun-Beyond Cognitive Architecture"
authors = ["AI-OSX Team"]
license = "MIT"
repository = "https://github.com/ai-osx/ai-osx"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "2.0.0", features = ["codegen", "isolation"] }

[dependencies]
tauri = { version = "2.0.0", features = [
    "api-all",
    "devtools",
    "protocol-asset", 
    "window-all",
    "system-tray",
    "global-shortcut",
    "fs-all",
    "path-all",
    "process-all",
    "shell-all",
    "http-all",
    "notification-all",
    "clipboard-manager",
    "dialog-all",
    "os-all",
    "updater",
    "wry",
    "linux-libxdo",
    "linux-protocol-headers",
    "macos-proxy"
] }
tauri-plugin-store = "2.0.0"
tauri-plugin-window-state = "2.0.0"
tauri-plugin-fs = "2.0.0"
tauri-plugin-shell = "2.0.0"
tauri-plugin-dialog = "2.0.0"
tauri-plugin-notification = "2.0.0"
tauri-plugin-os = "2.0.0"
tauri-plugin-process = "2.0.0"
tauri-plugin-updater = "2.0.0"
tauri-plugin-http = "2.0.0"

# Rust dependencies for Brain-Braun-Beyond integration
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
tokio = { version = "1.0", features = ["full"] }
reqwest = { version = "0.12", features = ["json", "stream"] }
futures = "0.3"
async-trait = "0.1"
uuid = { version = "1.0", features = ["v4"] }
chrono = { version = "0.4", features = ["serde"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
anyhow = "1.0"
thiserror = "1.0"

# AI and ML dependencies
candle-core = { version = "0.6" }
candle-nn = { version = "0.6" }
candle-transformers = { version = "0.6" }
tokenizers = "0.19"
hf-hub = "0.3"

# WebGPU and rendering
wgpu = { version = "0.19", features = ["webgl"] }
winit = "0.29"
pollster = "0.3"

# Cognitive processing
ndarray = { version = "0.15", features = ["serde"] }
nalgebra = { version = "0.32", features = ["serde-serialize"] }
rayon = "1.8"

# Audio processing for resonance
cpal = "0.15"
hound = "3.5"
apodize = "1.0"

# Cryptography
ring = "0.17"
rustls = { version = "0.22", features = ["dangerous_configuration"] }

# Database and storage
rusqlite = { version = "0.30", features = ["bundled"] }
rocksdb = { version = "0.21", features = ["multi-threaded-cf"] }

# Networking
tungstenite = { version = "0.21", features = ["rustls-tls-webpki-roots"] }
tokio-tungstenite = { version = "0.21", features = ["rustls-tls-webpki-roots"] }

# System integration
system-deps = "6.0"
dirs = "5.0"
notify = "6.1"
keyring = "2.3"

# Platform-specific dependencies
[target.'cfg(windows)'.dependencies]
windows = { version = "0.52", features = [
    "Win32_Foundation",
    "Win32_System_Threading",
    "Win32_UI_WindowsAndMessaging",
    "Win32_Graphics_Dwm"
] }

[target.'cfg(target_os = "macos")'.dependencies]
cocoa = "0.25"
objc = "0.2"
core-foundation = "0.9"

[target.'cfg(unix)'.dependencies]
libc = "0.2"
nix = { version = "0.27", features = ["process", "signal"] }

[features]
default = ["custom-protocol"]
custom-protocol = ["tauri/custom-protocol"]
devtools = ["tauri/devtools"]

# Performance optimizations
[profile.dev]
opt-level = 1

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
strip = true

# Multi-modal processing dependencies
image = { version = "0.24", features = ["jpeg", "png", "gif", "webp"] }
hound = "3.5"
regex = "1.10"

# AI model optimization
[profile.ai-models]
inherits = "release"
opt-level = 3
debug = false